from collections import defaultdict
from collections import deque
class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        G = defaultdict(list)
        for v in range(n):
            for w in range(n):
                if graph[v][w]:
                    G[v].append(w)
                    
        affect = defaultdict(list)
        for s in initial:
            visited = set([v for v in initial if v != s])
            que = deque([s])
            while que:
                v = que.popleft()
                if v in visited: continue
                visited.add(v)
                affect[v].append(s)
                for w in G[v]:
                    que.append(w)
        res = [0]*n
        for v in affect:
            if len(affect[v]) == 1:
                res[affect[v].pop()] += 1
        if not max(res): return min(initial)
        return res.index(max(res))